{"ast":null,"code":"var _jsxFileName = \"/Users/sayconfirmproductionsltd/Documents/GitHub/react-twitter-clone/frontend/src/pages/Login.js\";\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport styled from \"styled-components\";\nexport default function Login(props) {\n  const url = \"http://localhost:5000/login\";\n  const signal = useRef(axios.CancelToken.source());\n  let [account, setAccount] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState(null);\n\n  let handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    account[name] = value;\n    setAccount({ ...account,\n      account\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await axios.post(url, account, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true,\n        cancelToken: signal.current.token\n      });\n      console.log(res.data.data.user.username);\n      localStorage.setItem('username', res.data.data.user.username);\n      res.data.status && props.history.replace('/');\n\n      if (!res.status) {\n        //console.log(res.message)\n        setErrors(res.data.message);\n        return;\n      }\n    } catch (err) {\n      if (axios.isCancel(e)) {\n        console.log('Get request canceled');\n        setErrors(e.message);\n      } else {\n        console.log(err);\n        setErrors(err.message);\n      }\n    }\n\n    return () => {\n      console.log('unmount and cancel running axios request');\n      signal.current.cancel('Operation canceled by the user.');\n      setAccount({ ...account,\n        username: '',\n        password: ''\n      });\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(LoginContainer, {\n    className: \"home col-sm-10 col-md-10 col-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: account.username,\n    onChange: handleChange,\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    value: account.password,\n    onChange: handleChange,\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, errors)));\n}\nconst LoginContainer = styled.div`\np {\n    color: red;\n}\n\n`;","map":{"version":3,"sources":["/Users/sayconfirmproductionsltd/Documents/GitHub/react-twitter-clone/frontend/src/pages/Login.js"],"names":["React","useState","useRef","axios","styled","Login","props","url","signal","CancelToken","source","account","setAccount","username","password","errors","setErrors","handleChange","e","name","target","value","handleSubmit","preventDefault","res","post","headers","withCredentials","cancelToken","current","token","console","log","data","user","localStorage","setItem","status","history","replace","message","err","isCancel","cancel","LoginContainer","div"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport styled from \"styled-components\";\n\nexport default function Login(props) {\n\n    const url = \"http://localhost:5000/login\";\n\n    const signal = useRef(axios.CancelToken.source());\n\n    let [account, setAccount] = useState({\n        username: '',\n        password: ''\n    });\n    const [errors, setErrors] = useState(null)\n\n    let handleChange = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n        account[name] = value;\n        setAccount({ ...account, account });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const res = await axios.post(url, account, {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                 withCredentials:true,\n                 cancelToken: signal.current.token })\n            console.log(res.data.data.user.username)\n            localStorage.setItem('username', res.data.data.user.username)\n            res.data.status && props.history.replace('/')\n\n            if (!res.status) {\n                //console.log(res.message)\n                setErrors(res.data.message)\n                return;\n            }\n        } catch (err) {\n            if (axios.isCancel(e)) {\n                console.log('Get request canceled');\n                setErrors(e.message)\n            } else {\n                console.log(err)\n                setErrors(err.message)\n            }\n        }\n\n\n        return () => {\n            console.log('unmount and cancel running axios request');\n            signal.current.cancel('Operation canceled by the user.');\n            setAccount({ ...account, username: '', password: '' });\n        };\n    }\n\n    return (\n        <LoginContainer className=\"home col-sm-10 col-md-10 col-lg-5\" >\n            <h3>Login</h3>\n            <form onSubmit={e => { handleSubmit(e) }}>\n                <input type=\"text\" name=\"username\" value={account.username} onChange={handleChange} placeholder=\"username\" />\n                <input type=\"text\" name=\"password\" value={account.password} onChange={handleChange} placeholder=\"password\" />\n                <button className=\"btn\">Sign in</button>\n                <p>{errors}</p>\n            </form>\n        </LoginContainer>\n    )\n}\n\nconst LoginContainer = styled.div`\np {\n    color: red;\n}\n\n`;\n"]},"metadata":{},"sourceType":"module"}